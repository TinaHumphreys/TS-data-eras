<details><summary>See R code</summary>

::: {.callout-tip}
## The Eras Tour Dates and Venues

```{r}
#| message: false
#| warning: false
#| label: setup-map
# To clean data
library(tidyverse)
library(janitor)

# To scrape data
library(rvest)
library(httr)
library(polite)

# To geocode data
library(tidygeocoder)

# To visualize data
library(leaflet)
```

```{r}
#| label: url-map
url_map <-
  "https://www.sportskeeda.com/pop-culture/taylor-swift-2023-the-eras-tour-ticket-cities-and-dates"

url_map_bow <- polite::bow(url_map)
url_map_bow
```

```{r}
#| label: scrape-map
map_html <-
  polite::scrape(url_map_bow) |>  # scrape web page
  rvest::html_nodes("tbody") |> # pull out specific table
  rvest::html_table(fill = TRUE) |>
  bind_rows() |>
  row_to_names(row_number = 1) |>
  clean_names()
```

```{r}
#| label: geocode-map
#| message: false
map_html_geocode <-
  map_html |>
  geocode(venue,
          method = "osm",
          lat = latitude ,
          long = longitude)

map_html_geo <-
  map_html_geocode |>
  mutate(
    latitude = case_when(
      venue == "Empower Field at Mile Hi" ~ 39.74359,
      venue == "Johan Cruyff Arena" ~ 52.3143,
      .default = latitude
    ),
    longitude = case_when(
      venue == "Empower Field at Mile Hi" ~ -105.01968,
      venue == "Johan Cruyff Arena" ~ 4.94187,
      .default = longitude
    )
  ) |>
  mutate(number_shows = n(),
         .by = c(venue, city)) |>
  mutate(occurred = case_when(lubridate::mdy(paste0(date, year)) < today() ~ "Occurred",
                              .default = "Not Occurred"))
```

```{r}
#| label: leaflet-map
#| results: false
#| message: false

pal <- colorFactor(
  palette = c("#823549", "#1D1F38"),
  domain = map_html_geo$occurred
)

leaflet(options = leafletOptions(zoomControl = FALSE)) |>
  addProviderTiles("Stadia.AlidadeSmooth",
                   options = (noWrap = TRUE)) |>
  setMaxBounds(
    lng1 = 180,
    lat1 = 90,
    lng2 = -180,
    lat2 = -90
  ) |> 
  addCircleMarkers(
    data = map_html_geo,
    color = ~pal(occurred),
    label = paste(
      "Venue: ",
      map_html_geo$venue,
      "<br>",
      "City: ",
      map_html_geo$city,
      "<br>",
      "Number of Shows: ",
      map_html_geo$number_shows
    ) |>
      lapply(htmltools::HTML)
  ) |> 
  addLegend("bottomright", pal = pal, values = map_html_geo$occurred,
    title = "Event Status",
    opacity = 1
  )
```

:::
</details>
