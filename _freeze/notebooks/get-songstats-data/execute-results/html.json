{
  "hash": "cc46a3031e0d86c9ce5727b67b0fb8cb",
  "result": {
    "markdown": "<details><summary>See R code</summary>\n\n::: {.callout-tip}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(readr)\nlibrary(glue)\n\nget_artist_data <- function(artist_name, songstats_artist_id) {\n  url <-\n    \"https://api.songstats.com/enterprise/v1/artists/historic_stats\"\n  \n  queryString <- list(\n    source = \"all\",\n    songstats_artist_id = songstats_artist_id,\n    start_date = \"2020-01-01\"\n  )\n  \n  response <- httr::VERB(\n    \"GET\",\n    url,\n    query = queryString,\n    add_headers(\n      \"Accept-Encoding\" = \"\",\n      \"apikey\" = Sys.getenv(\"SONGSTATS_TOKEN\")\n    ),\n    content_type(\"application/octet-stream\"),\n    accept(\"application/json\")\n  )\n  \n  artist_data <- httr::content(response, \"text\")\n  \n  artist_tibble <- artist_data |>\n    jsonlite::fromJSON() |>\n    purrr::map_if(is.data.frame, list) |>\n    as.data.frame() |>\n    tidyr::unnest_wider(stats.data) |>\n    tidyr::unnest(history) |>\n    dplyr::mutate(\n      time_frame = dplyr::case_when(date < \"2022-11-01\" ~ \"before announcement\",\n                                    .default = \"after announcement\"),\n      artist = artist_name\n    )\n  \n  file_name <- glue::glue(\"{artist_name}_tibble.Rds\")\n  readr::write_rds(artist_tibble, \"data/file_name\")\n  \n  return(artist_tibble)\n}\n\n# Create a list of artists and their IDs\nartists <- list(\n  c(\"Paramore\", \"p5xm8h7b\"),\n  c(\"Beabadoobee\", \"n3k29evr\"),\n  c(\"Phoebe Bridgers\", \"9yhbd1el\"),\n  c(\"Girl In Red\", \"p71m4gr8\"),\n  c(\"MUNA\", \"fyxmowt5\"),\n  c(\"HAIM\", \"apuz50ix\"),\n  c(\"GAYLE\", \"q16uf7gk\"),\n  c(\"OWENN\", \"cztp0nug\"),\n  c(\"Gracie Abrams\", \"so4cd0bt\"),\n  c(\"Taylor Swift\", \"i5muw4xf\")\n)\n\nartist_data_list <-\n  map(artists, ~ get_artist_data(.x[1], .x[2]))\n\ncombined_artist_data <-\n  bind_rows(artist_data_list)\n\nwrite_rds(combined_artist_data, \"secret-data/combined_artist_data.rds\")\n```\n:::\n\n:::\n</summary>",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}