{
  "hash": "7dba9d6943c2b0d9d86845a0888f11f5",
  "result": {
    "markdown": "\n\n::: {.cell}\n\n```{.r .cell-code}\nurl2 <-\n  \"https://en.wikipedia.org/wiki/List_of_most-attended_concert_tours\"\n\nurl_bow2 <- polite::bow(url2)\nurl_bow2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<polite session> https://en.wikipedia.org/wiki/List_of_most-attended_concert_tours\n    User-agent: polite R package\n    robots.txt: 456 rules are defined for 33 bots\n   Crawl delay: 5 sec\n  The path is scrapable for this user-agent\n```\n\n\n:::\n\n```{.r .cell-code}\nind_html2 <-\n  polite::scrape(url_bow2) |>  # scrape web page\n  rvest::html_nodes(\"table.wikitable\") |> # pull out specific table\n  rvest::html_table(fill = TRUE)\n\nind_tab2 <-\n  ind_html2[[2]] |>\n  janitor::clean_names() |>\n  dplyr::mutate(tickets_sold = as.numeric(str_replace(tickets_sold, \" million.*\", \"\")) * 1e6)\n\ntours_by_decade2 <-\n  tours_by_decade |>\n  dplyr::mutate(\n    tour_title = case_when(\n      tour_title == \"Music of the Spheres World Tour †\" ~ \"Music of the Spheres World Tour\",\n      tour_title == \"The Garth Brooks World Tour\" ~ \"The Garth Brooks World Tour (1996–1998)\",\n      tour_title == \"Steel Wheels Tour\" ~ \"Steel Wheels/Urban Jungle Tour\",\n      .default = tour_title\n    )\n  )\n\ncost_per <-\n  left_join(ind_tab2, tours_by_decade2, join_by(tour_title))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncost_per |>\n  mutate(cost_per = adjusted_gross_in_2022_dollar / tickets_sold) |>\n  ggplot(aes(x = year, y = cost_per)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1 rows containing non-finite values (`stat_smooth()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1 rows containing missing values (`geom_point()`).\n```\n\n\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}