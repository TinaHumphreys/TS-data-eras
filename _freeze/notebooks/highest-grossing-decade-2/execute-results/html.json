{
  "hash": "428eb254b9dd02d81e86ffc4fb5ec471",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexecute:\n  eval: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggpattern)\n\nsource(here::here(\"highest-grossing-tours-r.R\"))\n\nfont_add_google(\"Abril Fatface\", \"abril-fatface\")\nfont_add_google(\"Lato\", \"lato\")\n\nshowtext::showtext_auto()\n\nannual_hi_gross_tours <- \n  ind_html[[9]] |>\n  clean_names()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncombine_data <- function(ind_html_list) {\n  # Initialize an empty tibble\n  combined_data <- tibble()\n  \n  # Loop through the ind_html_list and append each element to the combined_data\n  for (i in 4:8) {\n    extracted_data <- ind_html_list[[i]] |> clean_names()\n    combined_data <- bind_rows(combined_data, extracted_data)\n  }\n  \n  return(combined_data)\n}\n\nannual_hi_gross_tours <- combine_data(ind_html)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntours_by_decade <-\n  annual_hi_gross_tours |>\n  dplyr::mutate(across(\n    c(adjusted_gross_in_2022_dollar,\n      averagegross,\n      actual_gross),\n    ~ as.numeric(str_replace_all(.x, \"[$,]\", \"\"))\n  )) |>\n  mutate(\n    start_year = str_sub(year_s, start = 1, end = 4),\n    year = lubridate::ymd(start_year, truncated = 2L)\n  ) |>\n  mutate(\n    decade = paste0(str_sub(\n      as.factor(floor_date(year, years(10))), start = 1, end = 4\n    ), \"s\"),\n    adjusted_gross_in_2022_dollar = case_when(artist == \"Taylor Swift\" & tour_title == \"The Eras Tour †\" ~ 2200000000,\n              .default = adjusted_gross_in_2022_dollar))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# taylor <- system.file(\"~/R/taylor-swift-tour/notebooks/tours-images/taylor-swift.jpg\", package = \"ggpattern\")\n# u2 <- here::here(\"notebooks\", \"tours-images\", \"u2.jpg\")\n# elton <- here::here(\"notebooks\", \"tours-images\", \"elton.jpg\")\n# ed <- here::here(\"notebooks\", \"tours-images\", \"ed.jpg\")\n# stones <- here::here(\"notebooks\", \"tours-images\", \"stones.jpg\")\n# gnr <- here::here(\"notebooks\", \"tours-images\", \"gnr.jpg\")\n# coldplay <- here::here(\"notebooks\", \"tours-images\", \"coldplay.jpg\")\n# harry <- here::here(\"notebooks\", \"tours-images\", \"harry.jpg\")\n# beyonce <- here::here(\"notebooks\", \"tours-images\", \"beyonce.jpg\")\n# bunny <- here::here(\"notebooks\", \"tours-images\", \"bunny.jpg\")\n# rhcp <- here::here(\"notebooks\", \"tours-images\", \"rhcp.jpg\")\n# wknd <- \"~/R/taylor-swift-tour/notebooks/tours-images/wknd.jpg\"\n# pink <- here::here(\"notebooks\", \"tours-images\", \"pink.jpg\")\n\ntours_2020s <-\n  tours_by_decade %>% \n  filter(decade == \"2020s\") %>% \n  mutate(image = case_when(artist == \"Beyoncé\" ~ \"~/R/taylor-swift-tour/notebooks/tours-images/beyonce2.jpg\",\n                           artist == \"Harry Styles\" ~ \"~/R/taylor-swift-tour/notebooks/tours-images/harry2.jpg\",\n                           artist == \"Coldplay\" ~ \"~/R/taylor-swift-tour/notebooks/tours-images/coldplay.jpg\",\n                           artist == \"Ed Sheeran\" ~ \"~/R/taylor-swift-tour/notebooks/tours-images/ed2.jpg\",\n                           artist == \"Elton John\" ~ \"~/R/taylor-swift-tour/notebooks/tours-images/elton2.jpg\",\n                           artist == \"Bad Bunny\" ~ \"~/R/taylor-swift-tour/notebooks/tours-images/bunny2.jpg\",\n                           artist == \"Pink\" ~ \"~/R/taylor-swift-tour/notebooks/tours-images/pink2.jpg\",\n                           artist == \"Red Hot Chili Peppers\" ~ \"~/R/taylor-swift-tour/notebooks/tours-images/rhcp.jpg\",\n                           artist == \"The Weeknd\" ~ \"~/R/taylor-swift-tour/notebooks/tours-images/wknd.jpg\",\n                           artist == \"Taylor Swift\" ~ \"~/R/taylor-swift-tour/notebooks/tours-images/taylor2.jpg\"))\n\ntours_2020s$artist <- factor(tours_2020s$artist, levels = c(\"Red Hot Chili Peppers\", \"Pink\", \"The Weeknd\", \"Bad Bunny\", \"Ed Sheeran\", \"Elton John\", \"Beyoncé\", \"Harry Styles\", \"Coldplay\", \"Taylor Swift\"))\n\ntours_2020s %>% \n  ggplot(\n       aes(\n         x = fct_reorder(artist, adjusted_gross_in_2022_dollar),\n         y = adjusted_gross_in_2022_dollar,\n       )) +\n  geom_col_pattern(\n    aes(pattern_filename = fct_reorder(image, -adjusted_gross_in_2022_dollar)),\n    pattern = \"image\",\n    alpha = 0.8,\n    pattern_type = \"expand\"\n  ) +\n  scale_pattern_filename_discrete(\n    choices = tours_2020s$image\n    ) +\n  scale_x_discrete(\n    labels = function(x)\n      str_wrap(x, width = 10)\n  ) +\n  labs(title = \"Top 10 highest-grossing tours of the 2020s\") +\n  theme_minimal() +\n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        axis.text.x = element_blank(), \n        legend.position = \"none\",\n        title = element_text(size = 18,\n                         family = \"abril-fatface\",\n                         hjust = 0.5,\n                         color = \"#1D1E3C\")) +\n  coord_flip() +\n  geom_text(aes(label = paste0(round(adjusted_gross_in_2022_dollar/1e6, 0), \"M\"),\n            hjust = -0.1)) +\n  ylim(0, 2400000000) -> bar_2020s\n\nsave(bar_2020s, file = \"images/highest-grossing-tour-bar-2020s.rdata\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}